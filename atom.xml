<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-29T09:01:32.028Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>大二下学期末总结</title>
    <link href="http://yoursite.com/2020/06/29/%E5%A4%A7%E4%BA%8C%E4%B8%8B%E5%AD%A6%E6%9C%9F%E6%9C%AB%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/06/29/大二下学期末总结/</id>
    <published>2020-06-29T08:59:42.610Z</published>
    <updated>2020-06-29T09:01:32.028Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title: 大二下学期末总结<br>date: 2020-06-29 17:00:55<br>categories: 大学本科学期总结</p><hr><h2 id="今日鸭汤"><a href="#今日鸭汤" class="headerlink" title="今日鸭汤"></a>今日鸭汤</h2><p>  这篇文章其实早就想写的，但是因为一些突如其来的事情有些耽误了，大二下的所有考试已经结束了，论文、大作业、答辩全部都结束了，回想一下疫情期间这在家度过的半学期，还是过得充实而忙碌的，好像因为有了想要到达但却不算太容易到达的目的地，而有了一直向前奔跑的动力，当然想要站的更高一定会更耗费力气，好像每个自己不足的地方都在去尝试，竞赛、科研，不管结果怎么样，我自己的专业知识上，团队协作上，沟通协调上都感觉自己得到了提高，收获了老师的肯定，收获了志同道合的小伙伴，收获了找到以后想要做什么的幸福感，收获了小成就带来的内心的丰盈感，这对我来说便是枉少年吧。<br>  “你有想过放弃吗”<br>  “有啊，一直坚持多累啊”<br>  “那怎么还坚持呢”<br>  “没办法，因为喜欢吧”<br>接下来进入正题吧，这学期的技术性很强，学到了很多开发工具的使用方法，在小组作业的时候努力去和组员们利用有限的时间进行更多有效沟通，共同学习共同进步，共同发现问题并且去解决，是非常有挑战性但也很快乐的事情。</p><h2 id="安卓开发"><a href="#安卓开发" class="headerlink" title="安卓开发"></a>安卓开发</h2><p>做了一个疫情期间比较方便查看新闻、收集信息的app for android，大致的界面如下：</p><p><img src="https://img-blog.csdnimg.cn/20200629114948123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200629115040191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020062911520034.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200629115227764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200629115320156.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在做这个app的时候，最大的感受就是细节决定成败，反复尝试一定会有一次会到达，永远相信“下一次”的幸运。</p><h2 id="虚拟现实VR"><a href="#虚拟现实VR" class="headerlink" title="虚拟现实VR"></a>虚拟现实VR</h2><p>用unity做了一个跳舞的线新关卡的新版本，主要参考的一些教程素材放在这里：<br><a href="https://www.bilibili.com/video/BV1Rs41157ta?from=search&seid=6307777384455021856" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Rs41157ta?from=search&amp;seid=6307777384455021856</a><br><a href="https://www.bilibili.com/video/BV1Fb411G77f?p=3" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Fb411G77f?p=3</a><br>没错，我认为B站就是一个用来学习的网站！<br>因为会涉及到我们的名字等信息，所以就不把视频放上来了，放一些场景的图：<br><img src="https://img-blog.csdnimg.cn/20200629121241223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200629121322854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200629121340346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200629121410618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200629121431771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>做这个游戏对我来说最大的收获大概就是完成了当初高考结束选择这个专业的初心吧，就是想要自己能做出来那些小时候爱玩的游戏，也希望自己做出的游戏能成为别人的童年回忆，前面一个完成了一点点，后面的可能还需要以后去做更多尝试吧。</p><h2 id="基于UML的软件设计"><a href="#基于UML的软件设计" class="headerlink" title="基于UML的软件设计"></a>基于UML的软件设计</h2><p>问题定义与可行性分析—-需求报告—-概要设计—-详细设计—-软件测试报告—-项目规划设计书<br>推荐processOn来画UML图，数据流图等等，有很多模板，可以很多人一起协作。<br>写了很多文档，但是u1s1，就是画图和写文档差点劝退我。</p><h2 id="Springboot-SpringCloud-Vue商城开发"><a href="#Springboot-SpringCloud-Vue商城开发" class="headerlink" title="Springboot+SpringCloud+Vue商城开发"></a>Springboot+SpringCloud+Vue商城开发</h2><p>这个因为时间问题开发的不算特别完备，但是学到了很多东西，觉得最难的是这种前后端分离的系统开发对接的时候，跨域等等很多问题，这段开发经历为自己以后要是接触这方面的前端后端系统都能够奠定了一点基础。不过在开发过程中确实也有一点小插曲，最后也总算是解决了，觉得是一段很独特的经历，也算是给自己买了个教训。</p><p>暑假开始了，但好像还是有很多事情要忙，给自己短暂的放个假，就好好充实自己的暑假吧。已经看到学校开学的日期了，很开心，真没想到回到学校我们都已经大三了，珍惜最后在学校待的两年吧，今年下半学期没回成学校觉得有点遗憾的是没能送别大四的学长学姐们毕业，祝她们前程似锦，一切都好吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;title: 大二下学期末总结&lt;br&gt;date: 2020-06-29 17:00:55&lt;br&gt;categories: 大学本科学期总结&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;今日鸭汤&quot;&gt;&lt;a href=&quot;#今日鸭汤&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>build your blog</title>
    <link href="http://yoursite.com/2020/06/28/how%20to%20build%20your%20blog_/"/>
    <id>http://yoursite.com/2020/06/28/how to build your blog_/</id>
    <published>2020-06-28T15:35:55.000Z</published>
    <updated>2020-06-28T15:36:25.790Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用hexo搭建你的blog"><a href="#用hexo搭建你的blog" class="headerlink" title="用hexo搭建你的blog"></a>用hexo搭建你的blog</h2><p>refenrence：<br>build bog:<a href="https://www.jianshu.com/p/ef3f221a0374" target="_blank" rel="noopener">https://www.jianshu.com/p/ef3f221a0374</a><br>change theme:<a href="https://www.jianshu.com/p/869c6bcd0647" target="_blank" rel="noopener">https://www.jianshu.com/p/869c6bcd0647</a><br>关联域名：<a href="https://zhuanlan.zhihu.com/p/22183337" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/22183337</a></p><h2 id="我的blog"><a href="#我的blog" class="headerlink" title="我的blog"></a>我的blog</h2><p>之前一直忘记放自己的blog地址了，其实会跟csdn同步更新:<br><a href="https://phoebeyu731.github.io/" target="_blank" rel="noopener">Phoebe’s blog</a><br>我用的是archer主题，如果想看看这个主题的搭建效果的，欢迎来我的blog参观！</p><h2 id="给blog加分类和标签"><a href="#给blog加分类和标签" class="headerlink" title="给blog加分类和标签"></a>给blog加分类和标签</h2><p>refenrence：<br><a href="https://blog.csdn.net/smileyan9/article/details/86666602" target="_blank" rel="noopener">https://blog.csdn.net/smileyan9/article/details/86666602</a><br>我的总结如下：<br>  其实本来我用的archer主题就是带有tag和category的页面的，如下图：<br>  <img src="https://img-blog.csdnimg.cn/20200628231229402.png" alt="在这里插入图片描述"><br>  所以就很好办了，如果在自己的主题里没有看到有自带这个，可以检查自己的_config.yml文件<br>中相关项的值有没有设为true，如下图：<br><img src="https://img-blog.csdnimg.cn/20200628231600155.png" alt="在这里插入图片描述"><br>检查好了之后，自己的每篇要push上去的文章在开头都加上你想要的加的tags和categories，如下图：<br><img src="https://img-blog.csdnimg.cn/20200628232004619.png" alt="在这里插入图片描述"><br>再直接按照命令更新上去就可以啦。</p><h2 id="常用的command命令"><a href="#常用的command命令" class="headerlink" title="常用的command命令"></a>常用的command命令</h2><p>push：hexo d -g<br>run at localhost：hexo s（有时候远程不能很快就更新，可以先在本地运行，就能看见远程的更新了）<br>create new blog：hexo new “file name”<br>refenrence：<a href="https://blog.csdn.net/weixin_34239592/article/details/91448749" target="_blank" rel="noopener">https://blog.csdn.net/weixin_34239592/article/details/91448749</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;用hexo搭建你的blog&quot;&gt;&lt;a href=&quot;#用hexo搭建你的blog&quot; class=&quot;headerlink&quot; title=&quot;用hexo搭建你的blog&quot;&gt;&lt;/a&gt;用hexo搭建你的blog&lt;/h2&gt;&lt;p&gt;refenrence：&lt;br&gt;build bog:&lt;
      
    
    </summary>
    
      <category term="小白的技术成长之路" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%99%BD%E7%9A%84%E6%8A%80%E6%9C%AF%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF/"/>
    
    
      <category term="hexo blog" scheme="http://yoursite.com/tags/hexo-blog/"/>
    
  </entry>
  
  <entry>
    <title>大创学习记录（二）</title>
    <link href="http://yoursite.com/2020/05/06/%E5%A4%A7%E5%88%9B%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/06/大创学习记录（二）/</id>
    <published>2020-05-06T13:34:55.000Z</published>
    <updated>2020-06-28T14:53:43.756Z</updated>
    
    <content type="html"><![CDATA[<p>  五一假期忙忙碌碌就快过去了，虽然也不知道具体自己都在忙些什么，但是还是每天都有每天的收获，很充实，我常常在想人为什么需要假期，忙着奔跑之后的停顿可能也会带来一些小惊喜，对我来说，可能是去野餐瞥见阳光下的夏天的味道让人沉溺的只想睡去，可能是去串门发现高二的妹妹满墙的公式单词和“鸡汤”拼命地把我往回忆里拽，原来那时看起来那么幼稚的举动竟然真的能给现在的我这么大的力量……哈哈哈还是改不了一开始在键盘上敲字就要写小作文的习惯，不多说啦，假期的最后一天，记录一下大创学习的内容。‘<br>  老师在五一放假前请研究生学姐来给我们简要的介绍了一下深度学习LeNet-5的一些架构，当时来说还不是很明白，所以假期期间去看了老师推荐的一些教学视频和博客，再来理解学姐给我们的动手去跑一跑的代码，并且记录如下：<br>  对于卷积和池化的操作都比较简单了，卷积主要是做特征提取后向量的一些內积，计算方式可以用下图来表示<br> <img src="https://img-blog.csdnimg.cn/20200505172536282.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>有几个符号及计算关系需要记住：<br>H：图片高度；<br>W：图片宽度；<br>D：原始图片通道数，也是卷积核个数；<br>F：卷积核高宽大小；<br>P：图像边扩充大小；<br>S：滑动步长。<br>在上图中，H=5,W=5,D=3，P=1，经过卷积操作得到输出为3×3×2（用Ho×Wo×K表示）大小的特征图，即3×3大小的2通道特征图，其中Ho计算公式为：Ho=(H−F+2×P)/S+1，Wo同理。<br>池化则是通过减少网络的参数来减小计算量，并且能够在一定程度上控制过拟合。通常在卷积层的后面会加上一个池化层。池化包括最大池化、平均池化等。其中最大池化是用不重叠的矩形框将输入层分成不同的区域，对于每个矩形框的数取最大值作为输出层，是比较常采用的形式。<br>然后有一个LeNet5网络图比较有助于理解，一层一层的去剖析：<br><img src="https://img-blog.csdnimg.cn/20200505175038614.png" alt="在这里插入图片描述"><br><strong>1、INPUT层-输入层</strong><br>首先是数据 INPUT 层，输入图像的尺寸统一归一化为32×32。<br><strong>本层是不算LeNet-5的网络结构，传统上，不将输入层视为网络层次结构之一。</strong><br><strong>2、**</strong>C1层-卷积层<em>*<br>输入图片：32×32<br>卷积核大小：5×5<br>卷积核种类：6<br>输出featuremap大小：28×28 （32-5+1）=28<br>神经元数量：28×28×6<br>可训练参数：（5×5+1) ×6（每个滤波器5×5=25个unit参数和一个bias参数，一共6个滤波器）<br>连接数：（5×5+1）×6×28×28=122304<br><strong>3、S2层-池化层（下采样层）</strong><br>输入：28×28<br>采样区域：2×2<br>采样方式：4个输入相加，乘以一个可训练参数，再加上一个可训练偏置。结果通过sigmoid<br>采样种类：6<br>输出featureMap大小：14×14（28/2）<br>神经元数量：14×14×6<br>连接数：（2×2+1）<em>6×14×14，S2中每个特征图的大小是C1中特征图大小的1/4。<br>*</em>4、C3层-卷积层**<br>输入：S2中所有6个或者几个特征map组合卷积核大小：5×5<br>卷积核种类：16<br>输出featureMap大小：10×10 (14-5+1)=10<br>C3中的每个特征map是连接到S2中的所有6个或者几个特征map的，表示本层的特征map是上一层提取到的特征map的不同组合<br>存在的一个方式是：C3的前6个特征图以S2中3个相邻的特征图子集为输入。接下来6个特征图以S2中4个相邻特征图子集为输入。然后的3个以不相邻的4个特征图子集为输入。最后一个将S2中所有特征图为输入。<br>则：可训练参数：6×(3×5×5+1)+6×(4×5×5+1)+3×(4×5×5+1)+1×(6×5×5+1)=1516<br>连接数：10×10×1516=151600<br><strong>详细说明</strong>：第一次池化之后是第二次卷积，第二次卷积的输出是C3，16个10x10的特征图，卷积核大小是 5×5. 我们知道S2 有6个 14×14 的特征图，怎么从6 个特征图得到 16个特征图了？ 这里是通过对S2 的特征图特殊组合计算得到的16个特征图。具体如下：<br><img src="https://img-blog.csdnimg.cn/20200505181950117.png" alt="在这里插入图片描述"><br><strong>之前这里一直不是特别懂，现在理解了！</strong>C3的前6个feature map（对应上图第一个红框的6列）与S2层相连的任选3个feature map相连接（上图第一个红框），后面6个feature map与S2层相连的任选4个feature map相连接（上图第二个红框），后面3个feature map与S2层部分不相连的任选4个feature map相连接，最后一个与S2层的所有feature map相连。<br><img src="https://img-blog.csdnimg.cn/20200505182235180.png" alt="在这里插入图片描述"><br><strong>5、S4层-池化层（下采样层）</strong><br>输入：10×10<br>采样区域：2×2<br>采样方式：4个输入相加，乘以一个可训练参数，再加上一个可训练偏置。结果通过sigmoid<br>采样种类：16<br>输出featureMap大小：5×5（10/2）<br>神经元数量：5×5×16=400<br>连接数：16×（2×2+1）×5×5=2000<br>S4中每个特征图的大小是C3中特征图大小的1/4<br><strong>6、C5层-卷积层</strong><br>输入：S4层的全部16个单元特征map（与s4全相连）<br>卷积核大小：5×5<br>卷积核种类：120<br>输出featureMap大小：1×1（5-5+1）<br>可训练参数/连接：120×（16×5×5+1）=48120<br>C5层的网络结构如下：<br><img src="https://img-blog.csdnimg.cn/20200505190115290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>7、F6层-全连接层</strong><br>输入：c5 120维向量<br>计算方式：计算输入向量和权重向量之间的点积，再加上一个偏置，结果通过sigmoid函数输出。<br>可训练参数:84</em>(120+1)=10164<br><strong>详细说明</strong>：6层是全连接层。F6层有84个节点，对应于一个7x12的比特图，-1表示白色，1表示黑色，这样每个符号的比特图的黑白色就对应于一个编码。该层的训练参数和连接数是(120 + 1)x84=10164。ASCII编码图如下：<br><img src="https://img-blog.csdnimg.cn/20200505190255889.png" alt="在这里插入图片描述"><br>F6层的连接方式如下：<br><img src="https://img-blog.csdnimg.cn/2020050519032624.png" alt="在这里插入图片描述"><br><strong>8、Output层-全连接层</strong><br>Output层也是全连接层，共有10个节点，分别代表数字0到9，且如果节点i的值为0，则网络识别的结果是数字i。采用的是径向基函数（RBF）的网络连接方式。假设x是上一层的输入，y是RBF的输出，则RBF输出的计算方式是：<br><img src="https://img-blog.csdnimg.cn/20200505190421564.png" alt="在这里插入图片描述"></p><p>上式w_ij 的值由i的比特图编码确定，i从0到9，j取值从0到7*12-1。RBF输出的值越接近于0，则越接近于i，即越接近于i的ASCII编码图，表示当前网络输入的识别结果是字符i。该层有84x10=840个参数和连接。<br><img src="https://img-blog.csdnimg.cn/20200505190438571.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>上图是LeNet-5识别数字3的过程。<br>以上参考自这篇博客。 <a href="https://cuijiahua.com/blog/2018/01/dl_3.html" target="_blank" rel="noopener">LeNet5详解</a></p><p>把上述过程的一些参数的计算弄清楚之后，再去看代码。就会更好理解一些，但是在开始准备运行代码的时候，又遇到了一个障碍，学姐给的代码是pytorch环境的，而我之前搭的是tensorflow的，基于初学者，对于两者之间的转换可能不是很熟悉，想着以后反正都要用，就再去下载了一下pytorch。<br>过程如下：<br><strong><em>使用conda来安装pytorch</em></strong><br>在这里推荐一篇博客，安装过程写的非常详细。  <a href="https://blog.csdn.net/pw1623/article/details/90257347" target="_blank" rel="noopener">pytorch环境搭建</a></p><p>安装的命令同样可以登录pytorch的官网，然后选择和自己电脑配置以下的信息，会自动生成的对应conda命令</p><p><a href="https://pytorch.org/get-started/locally/" target="_blank" rel="noopener">https://pytorch.org/get-started/locally/</a><br><img src="https://img-blog.csdnimg.cn/20200505221837632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>如果不知道自己的各种安装的版本号，可以在anaconda navigator中查看，在Anaconda prompt中运行这句话之后，（我的是10.0）就会出现以下画面：<br><img src="https://img-blog.csdnimg.cn/20200505222300919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>但是我在运行了之后怎么都下载不下来，百度了一下很多人都有这个问题，有人说退出再运行一次就可以，但我的问题显然不是网络问题，所以无奈之下，只好换了一个命令，又去pytorch官网搜了更以前的版本来运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch&#x3D;&#x3D;1.2.0 torchvision&#x3D;&#x3D;0.4.0 cudatoolkit&#x3D;10.0 -c pytorch</span><br></pre></td></tr></table></figure><p>终于可以正常下载了，但是下载的过程还是花了很久，有人说把后面的-c pytorch去掉可以下载的快一点，不建议用pip安装，还是参照官网更好一点。<br>不管怎么样，最终还是下载完了，用下面这个命令查看已经搭建了哪些环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info --env</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200506110733374.png" alt="在这里插入图片描述"><br>可以看到pytorch已经存在了（tf2.0b是之前搭的tensorflow的环境）<br>接下来激活环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activate pytorch</span><br></pre></td></tr></table></figure><p>之后进入python</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python</span><br></pre></td></tr></table></figure><p>进行测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br></pre></td></tr></table></figure><p>都是可以正常运行的<br>于是开始运行项目以及代码，进入到保存代码的目录下，以后都可以直接用vscode或者什么吧代码编辑好之后，改成.py文件，放在目录下，我的这个目录下已经包括了下载好的MNIST手写数据集，所以直接用python运行就可以了<br><img src="https://img-blog.csdnimg.cn/20200506172937999.png" alt="在这里插入图片描述"><br>结果截图：<br><img src="https://img-blog.csdnimg.cn/20200506173250687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到准确度非常高，但是我仍然疑惑loss应该是一直下降的，我的结果不是一直下降的，而且震荡是非常大的，这个问题之前学姐演示的时候也被老师指出过，于是去问了老师，老师说是learning_rate太大的问题，于是后来又改小了那个指数，这个问题就解决的比较好了，结果如下：<br><img src="https://img-blog.csdnimg.cn/20200506211036738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在这里再放上篇博客，对于LeNet5每一层的讲解以及代码的呈现都是经典的LeNet5结构，非常值得学习的代码思路，所以我又在tensorflow环境里去跑了一下这篇博客里的代码，得到的结果也和博客里的结果是一样的。<a href="https://www.cnblogs.com/ai-learning-blogs/p/11094039.html" target="_blank" rel="noopener">CNN-1 LeNet5卷积神经网络模型</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  五一假期忙忙碌碌就快过去了，虽然也不知道具体自己都在忙些什么，但是还是每天都有每天的收获，很充实，我常常在想人为什么需要假期，忙着奔跑之后的停顿可能也会带来一些小惊喜，对我来说，可能是去野餐瞥见阳光下的夏天的味道让人沉溺的只想睡去，可能是去串门发现高二的妹妹满墙的公式单
      
    
    </summary>
    
      <category term="大创学习体会" scheme="http://yoursite.com/categories/%E5%A4%A7%E5%88%9B%E5%AD%A6%E4%B9%A0%E4%BD%93%E4%BC%9A/"/>
    
    
      <category term="LeNet-5" scheme="http://yoursite.com/tags/LeNet-5/"/>
    
  </entry>
  
  <entry>
    <title>大创学习记录（一）</title>
    <link href="http://yoursite.com/2020/05/02/%E5%A4%A7%E5%88%9B%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/02/大创学习记录（一）/</id>
    <published>2020-05-02T02:48:55.000Z</published>
    <updated>2020-06-28T14:46:52.883Z</updated>
    
    <content type="html"><![CDATA[<p>  把之前在csdn上写的两篇文章直接搬过来啦<br>  不久前看到了知乎上的一篇文章，《疫情期间大学生应该如何提升自己》，看完所有的文字，就觉得自己参加这样一个大创项目是多么的必要，目前大二的我已经参与了这是第二个大创项目，很幸运身边可以有大佬朋友愿意带我，但是说实话，第一个大创项目，我没有非常认真的去参与，这真是我非常后悔的一点，到现在也还没有结题，所以可能后期希望自己能为团队贡献自己的一点力量。但是！在这里我准备记录我参与的第二个大创项目，从组队到联系老师，再到写申请立项书，我都参与其中，希望能够真正的主动地去学习到有用的东西。<br>   好了，话不多说，开始今天的记录。<br>   首先，有目标才会有动力，有目标才会有计划。<br>   我们的项目是基于深度学习中的卷积神经网络（Faster R-CNN)以及YOLOv3预测模型，并不断用机器学习来优化算法，按照项目负责人的要求，近两周的学习计划如下，主要是先打个基础：</p><ol><li>学习深度学习相关知识。上<a href="http://eds.tju.edu.cn/ermsClient/browse.do查阅相关文献。top等级的论文几乎都在SCI上，登录资源平台外文数据库第一个web" target="_blank" rel="noopener">http://eds.tju.edu.cn/ermsClient/browse.do查阅相关文献。top等级的论文几乎都在SCI上，登录资源平台外文数据库第一个web</a> of science。</li><li>熟悉tensorflow框架。安装Anaconda，它是一个容器，然后在它里面可以搭建深度学习环境，安装Python, Numpy， Matplotlib，Tensorflow或者pytorch包。代码编辑器可以用VS code。</li><li>学习相关编程语言的语法。我们的算法用python实现，web用html+javascript。</li></ol><p>今天准备先搭建好tensorflow框架。<br>在网上看到，2019年春季，google发布了Tensorflow2.0测试版本。</p><p>指导老师温馨提醒：要注意自己的机器的配置，尤其是显卡。一般nVidia显卡可以装tensorflow的GPU版本，不是的话就装CPU版本。<br>笔者在我的电脑中的管理查了一下自己的显卡，发现自己的是Nvida GTX1050 Ti,运算能力4以上，符合安装GPU版本的要求。</p><p><strong>Anaconda + TensorFlow 2.0 GPU安装</strong></p><p><strong><em>Anoconda3下载</em></strong><br>下载官网<a href="https://www.anaconda.com/distribution/#download-section" target="_blank" rel="noopener">Anoconda3下载地址</a><br>建议安装Python 3.7 version,之后的操作比较方便<br>下载下来后一直next<br><img src="https://img-blog.csdnimg.cn/20200413103927732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>安装好后在开始菜单中找到Anaconda Prompt（开始菜单），如下图：<br><img src="https://img-blog.csdnimg.cn/20200413155540510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在命令行中输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n your_env_name python&#x3D;X.X</span><br></pre></td></tr></table></figure><p>your env name可以自己改，最好和用这个环境要安装的主力包有关，比如我用这个环境装了Tensorflow2.0.0beta1-gpu，我就把环境简单命名成tf2.0b。后面跟的是python版本号，因为我下的是3.7所以就改成python=3.7。之后让你回答Y/N，输入y就好。<br>安装成功后，命令行中输入<br><img src="https://img-blog.csdnimg.cn/20200413155957659.png" alt="在这里插入图片描述"><br>将环境激活，结果如图：<br><img src="https://img-blog.csdnimg.cn/20200413160203396.png" alt="在这里插入图片描述"><br>这个时候就可以在自己的虚拟环境下安装Tensorflow或者Pytorch, Numpy， Matplotlib等了。</p><p><strong><em>Tensorflow2.0 GPU安装</em></strong></p><p>Tensorflow2.0还没被收到anaconda库，所以需要用pip安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install tensorflow-gpu&#x3D;&#x3D;2.0.0b1</span><br></pre></td></tr></table></figure><p>之后就一直安装就可以了，这个过程我花了几乎一天的时间下载，安装好了命令行输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure><p>可以看到<br><img src="https://img-blog.csdnimg.cn/20200413235433349.png" alt="在这里插入图片描述"><br>有以上图中显示的条目，包括上面还有keras的，因为tf2.0把keras高度集成了。<br>接下来如果是安装的CPU，就不会有以下的步骤了。<br><strong><em>安装cuda和cudnn</em></strong><br>这个我本来以为只用用命令行就可以安装，于是之前试了用conda直接下载。tf2.0对于cuda的支持暂时仅限于10.0，cudnn是7.6.0。所以安装的时候要指定版本号。<br>在命令行输入如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda install cudnn&#x3D;7.6.0</span><br><span class="line">conda install cudatoolkit&#x3D;10.0.130</span><br></pre></td></tr></table></figure><p>但是后来过了一天打开tensorflow，准备运行一下简单的“Hello, tensorflow!”的程序，结果第一步import tensorflow就一直在报错，如下图：<br><img src="https://img-blog.csdnimg.cn/20200418213610871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">是cuda和cudnn的问题，查了很多资料也没解决，于是去问了老师，老师说不能直接用虚拟环境下的命令行来安装cuda和cudnn，还是之前踩了坑，所以还是应该在网上下载好安装包，于是在网上按照教程开始下载安装。<br><strong><em>安装CUDA Toolkit + cuDNN</em></strong><br>1.查看需要安装的CUDA+cuDNN版本<br>注意，tensorflow是在持续更新的，具体安装的CUDA和cuDNN版本需要去官网查看，要与最新版本的tensorflow匹配。<br>2.下载CUDA + cuDNN<br>在这个网址查找CUDA已发布版本：<a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener">https://developer.nvidia.com/cuda-toolkit-archive</a><br>下载好CUDA Toolkit 10.0 后，我们开始下载cuDnn，需要注意的是，下载cuDNN需要在nvidia上注册账号，使用邮箱注册就可以，免费的。登陆账号后才能下载。</p><p>cuDNN历史版本在该网址下载：<a href="https://developer.nvidia.com/rdp/cudnn-archive" target="_blank" rel="noopener">https://developer.nvidia.com/rdp/cudnn-archive</a><br><strong>重要的一步：卸载显卡驱动</strong><br>由于CUDA Toolkit需要在指定版本显卡驱动环境下才能正常使用的，所以如果我们已经安装了nvidia显卡驱动（很显然，大部分人都安装了），再安装CUDA Toolkit时，会因二者版本不兼容而导致CUDA无法正常使用，这也就是很多人安装失败的原因。而CUDA Toolkit安装包中自带与之匹配的显卡驱动，所以务必要删除电脑先前的显卡驱动。<br>（搜索栏—-控制面板—程序—-卸载或更改程序—-选择NVIDIA的显卡驱动）<br><strong>安装CUDA</strong><br>我在安装的时候遇到了一个问题，显示Chrome_elf.dll不能创建，查了一下资料，把电脑360安全防护什么的关掉就行了，但是并不知道是什么原理。<br>点击下载好的安装包，选择安装的文件夹，同意并继续，然后下面这里选择自定义：<br><img src="https://img-blog.csdnimg.cn/2020041822462037.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>后面一系列通过以后，又遇到了这个问题：<br><img src="https://img-blog.csdnimg.cn/20200419002649219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>百度了一下，才发现是VS的问题<br>于是我找了所有有关的百度，找到了DDU，它可以帮助我们删除显卡驱动，于是就去下载了（网址：<a href="https://www.wagnardsoft.com/forums/viewtopic.php?f=5&t=1490" target="_blank" rel="noopener">https://www.wagnardsoft.com/forums/viewtopic.php?f=5&amp;t=1490</a> ）<br>运行成功后重启电脑，然后重新安装cuda，这时候就要比较小心，点击自定义，转到另一个可以自定义功能的界面，把vs相关的那一项的勾选去掉，然后就ok了，最后显示安装成功！亲测有效啊！<br>接下来，解压cudnn下载下来的压缩文件的三个文件夹，拷贝到CUDA安装的根目录下。<br>下面要进行环境变量的配置。</p><p>将下面四个路径加入到环境变量中，注意要换成自己的安装路径。</p><p>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0</p><p>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\bin</p><p>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\lib\x64</p><p>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\libnvvp</p><p>到此，全部的安装步骤都已经完成，我们来测试一下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf</span><br><span class="line">tf.test.gpu_device_name()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200419110549853.png" alt="在这里插入图片描述"><br>2.查看在使用哪个GPU</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from tensorflow.python.client import device_lib</span><br><span class="line">device_lib.list_local_devices()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200419110826466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZmZl9wcmFncmFtbWVy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>好了，到这里终于大功告成，下载安装这个从昨天到今天又弄了大半天，于是打算今天稍晚点再开始真正的跑跑代码，学习一下tensorflow的一些基本用法和算法实例。</p><p><strong><em>安装matplotlib</em></strong><br>命令行输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install matplotlib</span><br></pre></td></tr></table></figure><p>显示结果如下，则安装成功。<img src="https://img-blog.csdnimg.cn/20200414004928846.png" alt="在这里插入图片描述"></p><p>至此，环境基本上都搭建好了，用来写代码的vs code 之前也已经安装过了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  把之前在csdn上写的两篇文章直接搬过来啦&lt;br&gt;  不久前看到了知乎上的一篇文章，《疫情期间大学生应该如何提升自己》，看完所有的文字，就觉得自己参加这样一个大创项目是多么的必要，目前大二的我已经参与了这是第二个大创项目，很幸运身边可以有大佬朋友愿意带我，但是说实话，第
      
    
    </summary>
    
      <category term="大创学习体会" scheme="http://yoursite.com/categories/%E5%A4%A7%E5%88%9B%E5%AD%A6%E4%B9%A0%E4%BD%93%E4%BC%9A/"/>
    
    
      <category term="tensorflow" scheme="http://yoursite.com/tags/tensorflow/"/>
    
  </entry>
  
</feed>
